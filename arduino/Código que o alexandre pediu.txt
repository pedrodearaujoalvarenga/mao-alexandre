/*
    Based on Neil Kolban example for IDF: https://github.com/nkolban/esp32-snippets/blob/master/cpp_utils/tests/BLE%20Tests/SampleWrite.cpp
    Ported to Arduino ESP32 by Evandro Copercini
*/

#include <BLEDevice.h>
#include <BLEUtils.h>
#include <BLEServer.h>

// See the following for generating UUIDs:
// https://www.uuidgenerator.net/

#define SERVICE_UUID        "4fafc201-1fb5-459e-8fcc-c5c9c331914b"
#define CHARACTERISTIC_UUID "beb5483e-36e1-4688-b7f5-ea07361b26a8"

boolean deviceConnected = false;

class connectCallbacks: public BLEServerCallbacks {
    void onConnect(BLEServer* pServer) {
      deviceConnected = true;
    };

    void onDisconnect(BLEServer* pServer) {
      deviceConnected = false;
    }
};

boolean wasPressed1 = false;
boolean wasPressed2 = false;
boolean wasPressed3 = false;
boolean wasPressed4 = false;
boolean wasPressed5 = false;
boolean wasPressed6 = false;

class MyCallbacks: public BLECharacteristicCallbacks {
    void onWrite(BLECharacteristic *pCharacteristic) {
      std::string value = pCharacteristic->getValue();

      if(strcmp(value, "1")){

       wasPressed1 = !wasPressed1;
               
       if(wasPressed1){
        Serial.println("value1 TRUE");
       }else{
        Serial.println("value1 FALSE");
       }


        
      }

      if(strcmp(value, "2")){

             wasPressed2 = !wasPressed2;
               
       if(wasPressed2){
        Serial.println("value2 TRUE");
       }else{
        Serial.println("value2 FALSE");
       }
        
      }
      if(strcmp(value, "3")){

               wasPressed3 = !wasPressed3;
               
       if(wasPressed3){
        Serial.println("value3 TRUE");
       }else{
        Serial.println("value3 FALSE");
       }
        
      }
      if(strcmp(value, "4")){

               wasPressed4 = !wasPressed4;
               
       if(wasPressed4){
        Serial.println("value4 TRUE");
       }else{
        Serial.println("value4 FALSE");
       }
        
      }
      if(strcmp(value, "5")){
               wasPressed5 = !wasPressed5;
               
       if(wasPressed5){
        Serial.println("value5 TRUE");
       }else{
        Serial.println("value5 FALSE");
       }
      }
      if(strcmp(value, "6")){
               wasPressed6 = !wasPressed6;
               
       if(wasPressed6){
        Serial.println("value6 TRUE");
       }else{
        Serial.println("value6 FALSE");
       }
      }
      

      
    }
};



void setup() {
  Serial.begin(115200);

  BLEDevice::init("ESP32");
  BLEServer *pServer = BLEDevice::createServer();
  pServer->setCallbacks(new connectCallbacks());
  BLEService *pService = pServer->createService(SERVICE_UUID);
  
  BLECharacteristic *pCharacteristic = pService->createCharacteristic(
                                         CHARACTERISTIC_UUID,
                                         BLECharacteristic::PROPERTY_READ |
                                         BLECharacteristic::PROPERTY_WRITE
                                       );

  pCharacteristic->setCallbacks(new MyCallbacks());
  pService->start();
  BLEAdvertising *pAdvertising = pServer->getAdvertising();
  pAdvertising->start();
}

void loop() {
  // put your main code here, to run repeatedly:
  delay(2000);
}